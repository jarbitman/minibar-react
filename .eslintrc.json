/**
 * These rules are for React and JSX syntax using a modified version of the AirBnB config files.
 * https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb/rules/react.js
 */
{
  "extends": [
    ".es6-eslintrc"
  ],
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "parser": "babel-eslint",
  "parserOptions": {
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true,
      "modules": true,
      "experimentalObjectRestSpread": true
    }
  },
  "plugins": [
    "promise",
    "react"
  ],
  "settings": {
    "react": {
      "pragma": "React",
      "version": "detect"
    }
  },
  "rules": {
    "comma-dangle": [2, "always-multiline"],
    "jsx-quotes": [2, "prefer-double"],
    "react/display-name": [0, { "ignoreTranspilerName": false }],
    "react/forbid-prop-types": [0, { "forbid": ["any", "array", "object"] }],
    "react/jsx-boolean-value": [0, "never"],
    "react/jsx-closing-bracket-location": [2, "after-props"],
    "react/jsx-curly-spacing": [2, "never", { "allowMultiline": true }],
    "react/jsx-handler-names": [0, {
      "eventHandlerPrefix": "handle",
      "eventHandlerPropPrefix": "on"
    }],
    "react/jsx-equals-spacing": [2, "never"],
    "react/jsx-first-prop-new-line": [2, "multiline"],
    "react/jsx-indent": [2, 2],
    "react/jsx-indent-props": [2, 2],
    "react/jsx-key": 1,
    "react/jsx-max-props-per-line": [0, { "maximum": 1 }],
    "react/jsx-no-bind": [2, {
      "ignoreRefs": true,
      "allowArrowFunctions": true,
      "allowBind": false
    }],
    "react/jsx-no-duplicate-props": [0, { "ignoreCase": false }],
    "react/jsx-no-literals": 0,
    "react/jsx-no-undef": 2,
    "react/jsx-pascal-case": 2,
    "react/sort-prop-types": [0, {
      "ignoreCase": false,
      "callbacksLast": false
    }],
    "react/jsx-sort-prop-types": 0,
    "react/jsx-sort-props": [0, {
      "ignoreCase": false,
      "callbacksLast": false
    }],
    "react/jsx-tag-spacing": 2,
    "react/jsx-uses-react": 2,
    "react/jsx-uses-vars": 2,
    "react/jsx-wrap-multilines": [2, {
      "declaration": "parens",
      "assignment": "parens",
      "return": "parens",
      "arrow": "ignore",
      "condition": "ignore",
      "logical": "ignore",
      "prop": "ignore"
    }],
    "react/no-danger": 0,
    "react/no-deprecated": 2,
    "react/no-did-mount-set-state": [2],
    "react/no-did-update-set-state": [2],
    "react/no-direct-mutation-state": 0,
    "react/no-is-mounted": 2,
    "react/no-multi-comp": [2, { "ignoreStateless": true }],
    "react/no-set-state": 0,
    "react/no-string-refs": 0,
    "react/no-unknown-property": 2,
    "react/prefer-es6-class": [2, "always"],
    "react/prefer-stateless-function": 2,
    "react/prop-types": [2, { "ignore": [], "customValidators": [] }],
    "react/react-in-jsx-scope": 2,
    "react/require-extension": [0, { "extensions": [".jsx"] }],
    "react/require-render-return": 2,
    "react/self-closing-comp": 2,
    "react/sort-comp": [2, {
      "order": [
        "constructor",
        "static-methods",
        "lifecycle",
        "/^on.+$/",
        "/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/",
        "everything-else",
        "/^render.+$/",
        "render"
      ]
    }],
    // overrides
    "complexity": [0, 0],
    "dot-notation": [2, {
      "allowKeywords": true,
      "allowPattern": "^[a-z]+(_[a-z]+)+$" // Allow snake case.
    }],
    "indent": [2, 2, {
      "SwitchCase": 1,
      "ignoredNodes": [
        "JSXAttribute",
        "JSXClosingElement",
        "JSXClosingFragment",
        "JSXElement",
        "JSXEmptyExpression",
        "JSXExpressionContainer",
        "JSXFragment",
        "JSXIdentifier",
        "JSXMemberExpression",
        "JSXNamespacedName",
        "JSXOpeningElement",
        "JSXOpeningFragment",
        "JSXSpreadAttribute",
        "JSXSpreadChild",
        "JSXText"
      ]
    }],
    "max-len": [2, 160, {"ignorePattern": "\\s*<"}],
    "new-cap": [2, {
      "newIsCap": true,
      "capIsNew": false
    }],
    "no-console": [2, {"allow": ["info", "warn", "error"]}],
    "spaced-comment": [2, "always", { "exceptions": ["*"] }]
  }
}
